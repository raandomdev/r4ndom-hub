local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
-- Window
local Window = Rayfield:CreateWindow({
   Name = "R4ndom Hub",
   LoadingTitle = "R4ndom Hub",
   LoadingSubtitle = "by Sirius",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "R4ndomfile"
   },
   Discord = {
      Enabled = false,
      Invite = "[REDACTED]",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "R4ndom Hub",
      Subtitle = "Key System",
      Note = "Join the discord (discord.gg/[TBD])",
      FileName = "SiriusKey",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = "Hello"
   }
})

Rayfield:Notify({
   Title = "IN BETA!",
   Content = "There might be bugs, please report them to the discord",
   Duration = 4,
   Image = 4483362458,
})

local Tab = Window:CreateTab("Home", 4483362458)
local Main = Window:CreateTab("Main", 4483362458)
local Automation = Window:CreateTab("Automation", 4483362458)
local Events = Window:CreateTab("Events", 4483362458)
local Misc = Window:CreateTab("Misc", 4483362458)

local SpeedInput = Tab:CreateInput({
   Name = "Set WalkSpeed",
   PlaceholderText = "16",
   RemoveTextAfterFocusLost = false,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local char = player.Character or player.CharacterAdded:Wait()
       local humanoid = char:FindFirstChildOfClass("Humanoid")
       if humanoid then
           humanoid.WalkSpeed = Value
       end
   end,
})

local infJumpEnabled = false

Tab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "InfJumpToggle",
    Callback = function(Value)
        infJumpEnabled = Value
    end,
})

game:GetService("UserInputService").JumpRequest:Connect(function()
    if infJumpEnabled then
        local player = game.Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

local noclipEnabled = false
Tab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "NoclipToggle",
    Callback = function(Value)
        noclipEnabled = Value
    end,
})

game:GetService("RunService").Stepped:Connect(function()
    if noclipEnabled then
        local player = game.Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()

        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end
end)

